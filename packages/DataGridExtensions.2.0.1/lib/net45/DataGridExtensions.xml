<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>DataGridExtensions</name>
    </assembly>
    <members>
        <member name="T:DataGridExtensions.Behaviors.BeginEditOnCtrlEnterBehavior">
            <summary>
            Ctrl+Enter on a cell starts editing the cell without clearing the content.
            </summary>
        </member>
        <member name="M:DataGridExtensions.Behaviors.BeginEditOnCtrlEnterBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:DataGridExtensions.Behaviors.BeginEditOnCtrlEnterBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>
            Override this to unhook functionality from the AssociatedObject.
            </remarks>
        </member>
        <member name="T:DataGridExtensions.Behaviors.ClearTextBoxOnButtonClickBehavior">
            <summary>
            Clears the text of the <see cref="P:DataGridExtensions.Behaviors.ClearTextBoxOnButtonClickBehavior.TextBox" /> when the associated button is clicked.
            </summary>
        </member>
        <member name="M:DataGridExtensions.Behaviors.ClearTextBoxOnButtonClickBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:DataGridExtensions.Behaviors.ClearTextBoxOnButtonClickBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>
            Override this to unhook functionality from the AssociatedObject.
            </remarks>
        </member>
        <member name="P:DataGridExtensions.Behaviors.ClearTextBoxOnButtonClickBehavior.TextBox">
            <summary>
            Gets or sets the text box to clear.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.Behaviors.ClearTextBoxOnButtonClickBehavior.TextBoxProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.Behaviors.ClearTextBoxOnButtonClickBehavior.TextBox" /> dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="T:DataGridExtensions.Behaviors.DisableTargetWhileEditingBehavior">
            <summary>
            This behavior disables the specified <see cref="P:DataGridExtensions.Behaviors.DisableTargetWhileEditingBehavior.Target" /> element while the
            DataGrid is in editing mode.
            </summary>
        </member>
        <member name="P:DataGridExtensions.Behaviors.DisableTargetWhileEditingBehavior.Target">
            <summary>
            Gets or sets the target element that will be disabled during editing.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.Behaviors.DisableTargetWhileEditingBehavior.TargetProperty">
            <summary>
            Identifies the Target dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.Behaviors.DisableTargetWhileEditingBehavior.OnAttached">
            <inheritdoc />
        </member>
        <member name="M:DataGridExtensions.Behaviors.DisableTargetWhileEditingBehavior.OnDetaching">
            <inheritdoc />
        </member>
        <member name="T:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior">
            <inheritdoc />
            <summary>
            Extended start size column behavior. Allows columns to get larger than the client area, but not smaller.
            The Resizing behavior can be modified using Ctrl or Shift keys: Ctrl resizes all columns to the right proportionally, Shift fits all columns to the right into the client area.
            A tool tip can be attached to the column headers resizing grippers to help the user with these features.
            </summary>
        </member>
        <member name="F:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.ColumnHeaderGripperToolTipStyleKey">
            <summary>
            The resource key for the default column header gripper tool tip style.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior" /> class.
            </summary>
        </member>
        <member name="P:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.ColumnHeaderGripperToolTipStyle">
            <summary>
            Gets or sets the style of the tool tip for the grippers in the column headers.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.ColumnHeaderGripperToolTipStyleProperty">
            <summary>
            Identifies the ColumnHeaderGripperToolTipStyle dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.ResourceLocator">
            <summary>
            Gets or sets the resource locator.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.ResourceLocatorProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.ResourceLocator" /> dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.Behaviors.ExtendedStarSizeBehavior.OnAttached">
            <inheritdoc />
        </member>
        <member name="T:DataGridExtensions.ColumnStyles">
            <summary>
            A class to manage the column styles of a <see cref="T:System.Windows.Controls.DataGrid" />
            </summary>
        </member>
        <member name="M:DataGridExtensions.ColumnStyles.GetDefaultColumnStyles(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the default column styles.
            <p /><c>[CanBeNull, ItemNotNull]</c></summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <returns>The styles.</returns>
        </member>
        <member name="M:DataGridExtensions.ColumnStyles.SetDefaultColumnStyles(System.Windows.Controls.DataGrid,DataGridExtensions.DataGridColumnStyleCollection)">
            <summary>
            Sets the default column styles.
            </summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <param name="value">The styles.<p /><c>[CanBeNull, ItemNotNull]</c></param>
        </member>
        <member name="F:DataGridExtensions.ColumnStyles.DefaultColumnStylesProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.ColumnStyles.DefaultColumnStyles" /> attached property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="T:DataGridExtensions.DataGridColumnStyleCollection">
            <summary>
            A collection of <see cref="T:DataGridExtensions.DataGridColumnStyle" /> objects.
            </summary>
        </member>
        <member name="T:DataGridExtensions.DataGridColumnStyle">
            <summary>
            Defines the column styles for a data grid column.
            </summary>
        </member>
        <member name="P:DataGridExtensions.DataGridColumnStyle.ColumnType">
            <summary>
            Gets or sets the type of the column for which to set the styles.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.DataGridColumnStyle.ElementStyle">
            <summary>
            Gets or sets the element style for the column.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridColumnStyle.ElementStyleProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.DataGridColumnStyle.ElementStyle" /> dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.DataGridColumnStyle.EditingElementStyle">
            <summary>
            Gets or sets the editing element style for the column.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridColumnStyle.EditingElementStyleProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.DataGridColumnStyle.EditingElementStyle" /> dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="T:DataGridExtensions.DataGridFilter">
            <summary>
            Defines the attached properties that can be set on the data grid level.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.GetIsAutoFilterEnabled(System.Windows.Controls.DataGrid)">
            <summary>
            Gets if the default filters are automatically attached to each column.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.SetIsAutoFilterEnabled(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            Sets if the default filters are automatically attached to each column. Set to false if you want to control filters by code.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.IsAutoFilterEnabledProperty">
            <summary>
            Identifies the IsAutoFilterEnabled dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.GetFilter(System.Windows.Controls.DataGrid)">
            <summary>
            Filter attached property to attach the DataGridFilterHost instance to the owning DataGrid.
            This property is only used by code and is not accessible from XAML.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.FilterProperty">
            <summary>
            Identifies the Filters dependency property.
            This property definition is private, so it's only accessible by code and can't be messed up by invalid bindings.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.GetContentFilterFactory(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the content filter factory for the data grid filter.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.SetContentFilterFactory(System.Windows.Controls.DataGrid,DataGridExtensions.IContentFilterFactory)">
            <summary>
            Sets the content filter factory for the data grid filter.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.ContentFilterFactoryProperty">
            <summary>
            Identifies the ContentFilterFactory dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.GetFilterEvaluationDelay(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the delay that is used to throttle filter changes before the filter is applied.
            </summary>
            <param name="obj">The data grid<p /><c>[NotNull]</c></param>
            <returns>The throttle delay.</returns>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.SetFilterEvaluationDelay(System.Windows.Controls.DataGrid,System.TimeSpan)">
            <summary>
            Sets the delay that is used to throttle filter changes before the filter is applied.
            </summary>
            <param name="obj">The data grid<p /><c>[NotNull]</c></param>
            <param name="value">The new throttle delay.</param>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.FilterEvaluationDelayProperty">
            <summary>
            Identifies the FilterEvaluationDelay dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.GetResourceLocator(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the resource locator.
            <p /><c>[CanBeNull]</c></summary>
            <param name="obj">The object.<p /><c>[NotNull]</c></param>
            <returns>The locator</returns>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.SetResourceLocator(System.Windows.Controls.DataGrid,DataGridExtensions.IResourceLocator)">
            <summary>
            Sets the resource locator.
            </summary>
            <param name="obj">The object.<p /><c>[NotNull]</c></param>
            <param name="value">The value.<p /><c>[CanBeNull]</c></param>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.ResourceLocatorProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.DataGridFilter.ResourceLocator" /> attached property
            <p /><c>[NotNull]</c></summary>
            <AttachedPropertyComments>
            <summary>
            Set an resource locator to locate resource if the component resource keys can not be found, e.g. because dgx is used in a plugin and multiple assemblies with resources might exist.
            </summary>
            </AttachedPropertyComments>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.GetGlobalFilter(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the value of the <see cref="P:DataGridExtensions.GlobalFilter" /> attached property from a given <see cref="T:System.Windows.Controls.DataGrid" />.
            <p /><c>[CanBeNull]</c></summary>
            <param name="obj">The <see cref="T:System.Windows.Controls.DataGrid" /> from which to read the property value.<p /><c>[NotNull]</c></param>
            <returns>the value of the <see cref="P:DataGridExtensions.GlobalFilter" /> attached property.</returns>
        </member>
        <member name="M:DataGridExtensions.DataGridFilter.SetGlobalFilter(System.Windows.Controls.DataGrid,System.Predicate{System.Object})">
            <summary>
            Sets the value of the <see cref="P:DataGridExtensions.GlobalFilter" /> attached property to a given <see cref="T:System.Windows.Controls.DataGrid" />.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.Controls.DataGrid" /> on which to set the property value.<p /><c>[NotNull]</c></param>
            <param name="value">The property value to set.<p /><c>[CanBeNull]</c></param>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.GlobalFilterProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.GlobalFilter" /> dependency property.
            <p /><c>[NotNull]</c></summary>
            <AttachedPropertyComments>
            <summary>
            Allows to specify a global filter that is applied to the items in addition to the column filters.
            </summary>
            </AttachedPropertyComments>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.TextColumnFilterTemplateKey">
            <summary>
            Template for the filter on a column represented by a DataGridTextColumn.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.CheckBoxColumnFilterTemplateKey">
            <summary>
            Template for the filter on a column represented by a DataGridCheckBoxColumn.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.TemplateColumnFilterTemplateKey">
            <summary>
            Template for the filter on a column represented by a DataGridCheckBoxColumn.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.ColumnHeaderTemplateKey">
            <summary>
            Template for the whole column header.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.IconTemplateKey">
            <summary>
            The filter icon template.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.IconStyleKey">
            <summary>
            The filter icon style.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.ColumnHeaderSearchCheckBoxStyleKey">
            <summary>
            Style for the filter check box in a filtered DataGridCheckBoxColumn.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.ColumnHeaderSearchTextBoxStyleKey">
            <summary>
            Style for the filter text box in a filtered DataGridTextColumn.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilter.ColumnHeaderSearchTextBoxClearButtonStyleKey">
            <summary>
            Style for the clear button in the filter text box in a filtered DataGridTextColumn.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="T:DataGridExtensions.DataGridFilterColumn">
            <summary>
            Defines the attached properties that can be set on the data grid column level.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumn.GetIsFilterVisible(System.Windows.Controls.DataGridColumn)">
            <summary>
            Control the visibility of the filter for this column.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumn.SetIsFilterVisible(System.Windows.Controls.DataGridColumn,System.Boolean)">
            <summary>
            Control the visibility of the filter for this column.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterColumn.IsFilterVisibleProperty">
            <summary>
            Identifies the IsFilterVisible dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumn.GetTemplate(System.Windows.Controls.DataGridColumn)">
            <summary>
            Gets the control template for the filter of this column. If the template is null or unset, a default template will be used.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumn.SetTemplate(System.Windows.Controls.DataGridColumn,System.Windows.Controls.ControlTemplate)">
            <summary>
            Sets the control template for the filter of this column. If the template is null or unset, a default template will be used.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterColumn.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumn.GetFilter(System.Windows.Controls.DataGridColumn)">
            <summary>
            Gets the filter expression of the column.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumn.SetFilter(System.Windows.Controls.DataGridColumn,System.Object)">
            <summary>
            Sets the filter expression of the column.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterColumn.FilterProperty">
            <summary>
            Identifies the Filter dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="T:DataGridExtensions.DataGridFilterColumnControl">
            <summary>
            This class is the control hosting all information needed for filtering of one column.
            Filtering is enabled by simply adding this control to the header template of the DataGridColumn.
            </summary>
            <seealso cref="T:System.Windows.Controls.Control" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="F:DataGridExtensions.DataGridFilterColumnControl._activeFilter">
            <summary>
            The active filter for this column.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumnControl.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.DataGridFilterColumnControl" /> class.
            </summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.Filter">
            <summary>
            The user provided filter (IFilter) or content (usually a string) used to filter this column.
            If the filter object implements IFilter, it will be used directly as the filter,
            else the filter object will be passed to the content filter.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterColumnControl.FilterProperty">
            <summary>
            Identifies the Filter dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.Values">
            <summary>
            Returns all distinct visible (filtered) values of this column as string.
            This can be used to e.g. feed the ItemsSource of an AutoCompleteBox to give a hint to the user what to enter.
            <p /><c>[NotNull, ItemNotNull]</c></summary>
            <remarks>
            You may need to include "NotifyOnTargetUpdated=true" in the binding of the DataGrid.ItemsSource to get up-to-date
            values when the source object changes.
            </remarks>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.SourceValues">
            <summary>
            Returns all distinct source values of this column as string.
            This can be used to e.g. feed the ItemsSource of an Excel-like auto-filter that always shows all source values that can be selected. 
            <p /><c>[NotNull, ItemNotNull]</c></summary>
            <remarks>
            You may need to include "NotifyOnTargetUpdated=true" in the binding of the DataGrid.ItemsSource to get up-to-date 
            values when the source object changes.
            </remarks>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.SelectableValues">
            <summary>
            Returns all distinct selectable values of this column as string.
            This can be used to e.g. feed the ItemsSource of an Excel-like auto-filter, that only shows the values that are currently selectable, depending on the other filters.
            <p /><c>[NotNull, ItemNotNull]</c></summary>
            <remarks>
            You may need to include "NotifyOnTargetUpdated=true" in the binding of the DataGrid.ItemsSource to get up-to-date 
            values when the source object changes.
            </remarks>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.IsFiltered">
            <summary>
            Returns a flag indicating whether this column has some filter condition to evaluate or not.
            If there is no filter condition we don't need to invoke this filter.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumnControl.Matches(System.Object)">
            <summary>
            Returns true if the given item matches the filter condition for this column.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumnControl.ValuesUpdated">
            <summary>
            Notification of the filter that the content of the values might have changed.
            </summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.Column">
            <summary>
            Gets the column this control is hosting the filter for.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.DataGrid">
            <summary>
            The DataGrid we belong to.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.FilterHost">
            <summary>
            The filter we belong to.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterColumnControl.ColumnHeader">
            <summary>
            The column header of the column we are filtering. This control must be a child element of the column header.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterColumnControl._cellValueProperty">
            <summary>
            Identifies the CellValue dependency property, a private helper property used to evaluate the property path for the list items.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumnControl.GetCellContent(System.Object)">
            <summary>
            Examines the property path and returns the objects value for this column.
            Filtering is applied on the SortMemberPath, this is the path used to create the binding.
            <p /><c>[CanBeNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumnControl.InternalValues">
            <summary>
            Gets the cell content of all list items for this column.
            <p /><c>[NotNull, ItemNotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumnControl.InternalSourceValues(System.Predicate{System.Object})">
            <summary>
            Gets the cell content of all list items for this column.
            <p /><c>[NotNull, ItemNotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterColumnControl.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the property.<p /><c>[NotNull]</c></param>
        </member>
        <member name="E:DataGridExtensions.DataGridFilterColumnControl.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:DataGridExtensions.DataGridFilterHost">
            <summary>
            This class hosts all filter columns and handles the filter changes on the data grid level.
            This class will be attached to the DataGrid.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterHost._filterColumnControls">
            <summary>
            Filter information about each column.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterHost._deferFilterEvaluationTimer">
            <summary>
            Timer to defer evaluation of the filter until user has stopped typing.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterHost._filteredColumns">
            <summary>
            The columns that we are currently filtering.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterHost._isFilteringEnabled">
            <summary>
            Flag indicating if filtering is currently enabled.
            </summary>
        </member>
        <member name="F:DataGridExtensions.DataGridFilterHost._globalFilter">
            <summary>
            A global filter that is applied in addition to the column filters.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.#ctor(System.Windows.Controls.DataGrid)">
            <summary>
            Create a new filter host for the given data grid.
            </summary>
            <param name="dataGrid">The data grid to filter.</param>
        </member>
        <member name="E:DataGridExtensions.DataGridFilterHost.Filtering">
            <summary>
            Occurs before new columns are filtered.
            </summary>
        </member>
        <member name="E:DataGridExtensions.DataGridFilterHost.FilterChanged">
            <summary>
            Occurs when any filter has changed.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.Clear">
            <summary>
            Clear all existing filter conditions.
            </summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterHost.FilterColumnControls">
            <summary>
            Gets a the active filter column controls for this data grid.
            <p /><c>[NotNull, ItemNotNull]</c></summary>
        </member>
        <member name="P:DataGridExtensions.DataGridFilterHost.DataGrid">
            <summary>
            The data grid this filter is attached to.
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.Enable(System.Boolean)">
            <summary>
            Enables filtering by showing or hiding the filter controls.
            </summary>
            <param name="value">if set to <c>true</c>, filters controls are visible and filtering is enabled.</param>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.OnFilterChanged">
            <summary>
            When any filter condition has changed restart the evaluation timer to defer
            the evaluation until the user has stopped typing.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.AddColumn(DataGridExtensions.DataGridFilterColumnControl)">
            <summary>
            Adds a new column.
            </summary>
            <param name="filterColumn"></param>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.RemoveColumn(DataGridExtensions.DataGridFilterColumnControl)">
            <summary>
            Removes an unloaded column.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.CreateContentFilter(System.Object)">
            <summary>
            Creates a new content filter.
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilterHost.EvaluateFilter">
            <summary>
            Evaluates the current filters and applies the filtering to the collection view of the items control.
            </summary>
        </member>
        <member name="T:DataGridExtensions.DataGridFilteringEventArgs">
            <summary>
            Notification about additional columns to be filtered.
            Clients can e.g. use this event to cache/preload column data in a different thread and/or display a wait cursor while filtering.
            <remarks>
            Clients may only cancel the processing when e.g. the data grid is about to be unloaded. Canceling the process of filtering 
            will cause the UI to be inconsistent.
            </remarks>
            </summary>
        </member>
        <member name="M:DataGridExtensions.DataGridFilteringEventArgs.#ctor(System.Collections.Generic.ICollection{System.Windows.Controls.DataGridColumn})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.DataGridFilteringEventArgs" /> class.
            </summary>
            <param name="columns">The additional columns that will be filtered.<p /><c>[NotNull, ItemNotNull]</c></param>
        </member>
        <member name="P:DataGridExtensions.DataGridFilteringEventArgs.Columns">
            <summary>
            Gets the additional columns that will be filtered.
            <p /><c>[NotNull, ItemNotNull]</c></summary>
        </member>
        <member name="T:DataGridExtensions.ExtensionMethods">
            <summary>
            Extension methods for the data grid.
            </summary>
        </member>
        <member name="M:DataGridExtensions.ExtensionMethods.EnableMultilineEditing(System.Windows.Controls.DataGridTextColumn)">
            <summary>
            Tweaks the editing element style to enable multi-line editing.
            </summary>
            <param name="column">The column.<p /><c>[NotNull]</c></param>
            <remarks>
            Ctrl+Return will add a new line when editing the cell.
            </remarks>
        </member>
        <member name="M:DataGridExtensions.ExtensionMethods.HasRectangularCellSelection(System.Windows.Controls.DataGrid)">
            <summary>
            Determines whether the cell selection of the data grid is a rectangular range.
            </summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <returns><c>true</c> if the cell selection is a rectangular range.</returns>
        </member>
        <member name="M:DataGridExtensions.ExtensionMethods.GetCellSelection(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the content of the selected cells as a table of strings.
            <p /><c>[CanBeNull, ItemNotNull]</c></summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <returns>The selected cell content.</returns>
        </member>
        <member name="M:DataGridExtensions.ExtensionMethods.PasteCells(System.Windows.Controls.DataGrid,System.Collections.Generic.IList{System.Collections.Generic.IList{System.String}})">
            <summary>
            Replaces the selected cells with the data. Cell selection and the data table must have matching dimensions, either 1:n, n:1 or n:x*n.
            </summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <param name="data">The data.<p /><c>[NotNull, ItemNotNull]</c></param>
            <remarks>The cell selection is assumed to be a rectangular area.</remarks>
            <returns><c>true</c> if the dimensions of data and cell selection did match and the cells data has been replaced; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:DataGridExtensions.ExtensionMethods.GetVisibleSelectedCells(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the selected cells that are in visible columns.
            <p /><c>[CanBeNull]</c></summary>
            <param name="dataGrid">The data grid.<p /><c>[CanBeNull]</c></param>
            <returns>The selected cells of visible columns.</returns>
        </member>
        <member name="T:DataGridExtensions.Framework.DispatcherThrottle">
            <summary>
            Implements a throttle that uses the dispatcher to delay the target action.
            </summary>
        </member>
        <member name="M:DataGridExtensions.Framework.DispatcherThrottle.#ctor(System.Windows.Threading.DispatcherPriority,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.Framework.DispatcherThrottle" /> class.
            </summary>
            <param name="priority">The priority of the dispatcher.</param>
            <param name="target">The target action to invoke when the throttle condition is hit.<p /><c>[NotNull]</c></param>
        </member>
        <member name="M:DataGridExtensions.Framework.DispatcherThrottle.Tick">
            <summary>
            Ticks this instance to trigger the throttle.
            </summary>
        </member>
        <member name="T:DataGridExtensions.IContentFilter">
            <summary>
            Interface to be implemented by content filters.
            </summary>
        </member>
        <member name="M:DataGridExtensions.IContentFilter.IsMatch(System.Object)">
            <summary>
            Determines whether the specified value matches the condition of this filter.
            </summary>
            <param name="value">The content.<p /><c>[CanBeNull]</c></param>
            <returns>
              <c>true</c> if the specified value matches the condition; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:DataGridExtensions.IContentFilterFactory">
            <summary>
            Interface to be implemented by a content filter factory.
            </summary>
        </member>
        <member name="M:DataGridExtensions.IContentFilterFactory.Create(System.Object)">
            <summary>
            Creates the content filter for the specified content.
            <p /><c>[NotNull]</c></summary>
            <param name="content">The content to create the filter for.<p /><c>[CanBeNull]</c></param>
            <returns>The new filter.</returns>
        </member>
        <member name="T:DataGridExtensions.IDataGridEventsProvider">
            <summary>
            Provides additional events for the <see cref="T:System.Windows.Controls.DataGrid" />
            </summary>
        </member>
        <member name="E:DataGridExtensions.IDataGridEventsProvider.ColumnVisibilityChanged">
            <summary>
            Occurs when the visibility of a column has changed.
            </summary>
        </member>
        <member name="E:DataGridExtensions.IDataGridEventsProvider.ColumnActualWidthChanged">
            <summary>
            Occurs when the actual width of a column has changed.
            </summary>
        </member>
        <member name="E:DataGridExtensions.IDataGridEventsProvider.ColumnDisplayIndexChanged">
            <summary>
            Occurs when the display index of a column has changed.
            </summary>
        </member>
        <member name="M:DataGridExtensions.InternalExtensionMethods.Restart(System.Windows.Threading.DispatcherTimer)">
            <summary>
            Restarts the specified timer.
            </summary>
            <param name="timer">The timer.</param>
        </member>
        <member name="M:DataGridExtensions.InternalExtensionMethods.FindAncestorOrSelf``1(System.Windows.DependencyObject)">
            <summary>
            Walks the elements tree and returns the first element that derives from T.
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="item">The item to start search with.</param>
            <returns>The element if found; otherwise null.</returns>
        </member>
        <member name="M:DataGridExtensions.InternalExtensionMethods.BeginInvoke(System.Windows.Media.Visual,System.Action)">
            <summary>
            Shortcut to <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
            </summary>
        </member>
        <member name="M:DataGridExtensions.InternalExtensionMethods.BeginInvoke(System.Windows.Media.Visual,System.Windows.Threading.DispatcherPriority,System.Action)">
            <summary>
            Shortcut to <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
            </summary>
        </member>
        <member name="M:DataGridExtensions.InternalExtensionMethods.SafeCast``1(System.Object)">
            <summary>
            Performs a cast from object to <typeparamref name="T" />, avoiding possible null violations if <typeparamref name="T" /> is a value type.
            </summary>
            <typeparam name="T">The target type</typeparam>
            <param name="value">The value.</param>
            <returns>The value casted to <typeparamref name="T" />, or <c>default(T)</c> if value is <c>null</c>.</returns>
        </member>
        <member name="M:DataGridExtensions.InternalExtensionMethods.GetValue``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Gets the value of a dependency property using <see cref="M:DataGridExtensions.InternalExtensionMethods.SafeCast``1(System.Object)" />.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="self">The dependency object from which to get the value.</param>
            <param name="property">The property to get.</param>
            <returns>The value safely casted to <typeparamref name="T" /></returns>
        </member>
        <member name="M:DataGridExtensions.Enumerate.AsTuples``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Enumerates the elements of two enumerations as tuples.
            </summary>
            <typeparam name="T1">The type of the first collection.</typeparam>
            <typeparam name="T2">The type of the second collection.</typeparam>
            <param name="first">The first collection.</param>
            <param name="second">The second collection.</param>
            <returns>Tuples of the elements.</returns>
            <remarks>If the number of elements in each collection is different, the smaller collection determines the number of enumerated items.</remarks>
        </member>
        <member name="T:DataGridExtensions.IResourceLocator">
            <summary>
            A resource locator to override the windows internal mechanism of resource loading, e.g. because dgx is used in a plugin and multiple assemblies with resources might exist.
            </summary>
        </member>
        <member name="M:DataGridExtensions.IResourceLocator.FindResource(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Returns the resource for the specified resource key.
            <p /><c>[CanBeNull]</c></summary>
            <param name="target">The target object<p /><c>[NotNull]</c></param>
            <param name="resourceKey">The resource key.<p /><c>[NotNull]</c></param>
            <returns>The resource.</returns>
        </member>
        <member name="T:DataGridExtensions.RegexContentFilter">
            <inheritdoc />
            <summary>
            A content filter using the content as a regular expression to match the string representation of the value.
            </summary>
        </member>
        <member name="M:DataGridExtensions.RegexContentFilter.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.RegexContentFilter" /> class.
            </summary>
            <param name="expression">The expression.<p /><c>[NotNull]</c></param>
            <param name="regexOptions">The regex options.</param>
        </member>
        <member name="M:DataGridExtensions.RegexContentFilter.IsMatch(System.Object)">
            <summary>
            Determines whether the specified value matches the condition of this filter.
            </summary>
            <param name="value">The content.</param>
            <returns>
              <c>true</c> if the specified value matches the condition; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:DataGridExtensions.RegexContentFilterFactory">
            <summary>
            Factory to create a <see cref="T:DataGridExtensions.RegexContentFilter" />
            </summary>
        </member>
        <member name="M:DataGridExtensions.RegexContentFilterFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.RegexContentFilterFactory" /> class.
            </summary>
        </member>
        <member name="M:DataGridExtensions.RegexContentFilterFactory.#ctor(System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.RegexContentFilterFactory" /> class.
            </summary>
            <param name="regexOptions">The regex options.</param>
        </member>
        <member name="P:DataGridExtensions.RegexContentFilterFactory.RegexOptions">
            <summary>
            Gets or sets the regex options.
            </summary>
        </member>
        <member name="M:DataGridExtensions.RegexContentFilterFactory.Create(System.Object)">
            <summary>
            Creates the content filter for the specified content.
            </summary>
            <param name="content">The content to create the filter for.</param>
            <returns>
            The new filter.
            </returns>
        </member>
        <member name="T:DataGridExtensions.SimpleContentFilter">
            <summary>
            A content filter using a simple "contains" string comparison to match the content and the value.
            </summary>
        </member>
        <member name="M:DataGridExtensions.SimpleContentFilter.#ctor(System.String,System.StringComparison)">
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.SimpleContentFilter" /> class.
            </summary>
            <param name="content">The content.<p /><c>[NotNull]</c></param>
            <param name="stringComparison">The string comparison.</param>
        </member>
        <member name="M:DataGridExtensions.SimpleContentFilter.IsMatch(System.Object)">
            <summary>
            Determines whether the specified value matches the condition of this filter.
            </summary>
            <param name="value">The content.</param>
            <returns>
              <c>true</c> if the specified value matches the condition; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:DataGridExtensions.SimpleContentFilterFactory">
            <summary>
            Factory to create a <see cref="T:DataGridExtensions.SimpleContentFilter" />
            </summary>
        </member>
        <member name="M:DataGridExtensions.SimpleContentFilterFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.SimpleContentFilterFactory" /> class.
            </summary>
        </member>
        <member name="M:DataGridExtensions.SimpleContentFilterFactory.#ctor(System.StringComparison)">
            <summary>
            Initializes a new instance of the <see cref="T:DataGridExtensions.SimpleContentFilterFactory" /> class.
            </summary>
            <param name="stringComparison">The string comparison to use.</param>
        </member>
        <member name="P:DataGridExtensions.SimpleContentFilterFactory.StringComparison">
            <summary>
            Gets or sets the string comparison.
            </summary>
        </member>
        <member name="M:DataGridExtensions.SimpleContentFilterFactory.Create(System.Object)">
            <summary>
            Creates the content filter for the specified content.
            </summary>
            <param name="content">The content to create the filter for.</param>
            <returns>
            The new filter.
            </returns>
        </member>
        <member name="T:DataGridExtensions.Tools">
            <summary>
            Some useful tools for data grids.
            </summary>
        </member>
        <member name="M:DataGridExtensions.Tools.GetApplyInitialSorting(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the flag to enable the 'apply initial sorting' feature.
            </summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
        </member>
        <member name="M:DataGridExtensions.Tools.SetApplyInitialSorting(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            Sets a flag to enable the 'apply initial sorting' feature.
            </summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <param name="value">if set to <c>true</c> the initial sorting will be applied.</param>
        </member>
        <member name="F:DataGridExtensions.Tools.ApplyInitialSortingProperty">
            <summary>
            Identifies the ApplyInitialSorting dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
        <member name="M:DataGridExtensions.Tools.GetAdditionalEvents(System.Windows.Controls.DataGrid)">
            <summary>
            Gets additional events for a data grid.
            <p /><c>[NotNull]</c></summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <returns>The event provider.</returns>
        </member>
        <member name="F:DataGridExtensions.Tools.DataGridEventsProviderProperty">
            <summary>
            Identifies the DataGridEventsProvider dependency property
            </summary>
        </member>
        <member name="M:DataGridExtensions.Tools.GetIsMultilineEditingEnabled(System.Windows.Controls.DataGridTextColumn)">
            <summary>
            Gets a value that indicates if multi line editing is enabled for the specified text column.
            </summary>
            <param name="obj">The column.<p /><c>[NotNull]</c></param>
            <returns><c>true</c> if  multi line editing is enabled.</returns>
        </member>
        <member name="M:DataGridExtensions.Tools.SetIsMultilineEditingEnabled(System.Windows.Controls.DataGridTextColumn,System.Boolean)">
            <summary>
            Sets a value that indicates if multi line editing is enabled for the specified text column.
            </summary>
            <param name="obj">The column.<p /><c>[NotNull]</c></param>
            <param name="value">if set to <c>true</c> multi line editing is enabled.</param>
        </member>
        <member name="F:DataGridExtensions.Tools.IsMultilineEditingEnabledProperty">
            <summary>
            Identifies the <see cref="P:DataGridExtensions.Tools.IsMultilineEditingEnabled" /> attached property
            <p /><c>[NotNull]</c></summary>
            <AttachedPropertyComments>
            <summary>
            Gets or sets a value that indicates if multi line editing is enabled for the specified text column.
            </summary>
            <remarks>
            This property can only be set to true once, toggling the value will have no further effect.
            </remarks>
            </AttachedPropertyComments>
        </member>
        <member name="M:DataGridExtensions.Tools.GetForceCommitOnLostFocus(System.Windows.Controls.DataGrid)">
            <summary>
            Gets a value that indicates if a commit will be forced on the data grid when it looses the focus.
            </summary>
            <param name="dataGrid">The object.<p /><c>[NotNull]</c></param>
            <returns><c>true</c> if a commit will be forced for the data grid when it looses the focus</returns>
        </member>
        <member name="M:DataGridExtensions.Tools.SetForceCommitOnLostFocus(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            Sets a value that indicates if a commit will be forced on the data grid when it looses the focus.
            </summary>
            <param name="dataGrid">The data grid.<p /><c>[NotNull]</c></param>
            <param name="value">If set to <c>true</c> a commit will be forced on the data grid when it looses the focus.</param>
        </member>
        <member name="F:DataGridExtensions.Tools.ForceCommitOnLostFocusProperty">
            <summary>
            Identifies the ForceCommitOnLostFocus dependency property
            <p /><c>[NotNull]</c></summary>
        </member>
    </members>
</doc>
